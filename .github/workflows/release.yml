name: release

on:
  push:
    tags:
      - v*

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release_step.outputs.upload_url }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get version from tag
        id: version
        run: |
          echo version=${GITHUB_REF#refs/tags/v} >> $GITHUB_OUTPUT
        shell: bash
      - name: Parse Changelog Entry
        id: changelog
        uses: coditory/changelog-parser@v1
        with:
          version: ${{ steps.version.outputs.version }}
      - name: Create GitHub Release
        id: create_release_step
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.changelog.outputs.version }}
          release_name: v${{ steps.changelog.outputs.version }}
          body: ${{ steps.changelog.outputs.description }}
  create_bundles_linux:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build and pack OtterLib
        run: |
          cd $GITHUB_WORKSPACE/OtterLib
          mkdir build && cd build
          PROJECT_VERSION={{ needs.create_release.outputs.version }} cmake ..
          cpack --config CPackConfig.cmake
      - name: build and pack rtype
        run: |
          cd $GITHUB_WORKSPACE/games/rtype
          mkdir build && cd build
          PROJECT_VERSION={{ needs.create_release.outputs.version }} cmake ..
          cpack --config CPackConfig.cmake
      - name: upload OtterLib artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: $GITHUB_WORKSPACE/OtterLib/build/OtterLib-${{ needs.create_release.outputs.version }}-Linux.tar.gz
          asset_name: OtterLib-${{ needs.create_release.outputs.version }}-Linux.tar.gz
          asset_content_type: application/gzip
      - name: upload RType artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: $GITHUB_WORKSPACE/games/rtype/build/RType-${{ needs.create_release.outputs.version }}-Linux.tar.gz
          asset_name: RType-${{ needs.create_release.outputs.version }}-Linux.tar.gz
          asset_content_type: application/gzip
  create_bundles_windows:
    runs-on: windows-latest
    needs: create_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build and pack OtterLib
        run: |
          cd %GITHUB_WORKSPACE%\OtterLib
          ls
          mkdir build && cd build
          PROJECT_VERSION={{ needs.create_release.outputs.version }} cmake ..
          cpack --config CPackConfig.cmake
          ls
      - name: build and pack rtype
        run: |
          cd %GITHUB_WORKSPACE%\games\rtype
          mkdir build && cd build
          PROJECT_VERSION={{ needs.create_release.outputs.version }} cmake ..
          cpack --config CPackConfig.cmake
          ls
      # - name: upload OtterLib artifact
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ needs.create_release.outputs.upload_url }}
      #     asset_path: $GITHUB_WORKSPACE/OtterLib/build/OtterLib-${{ needs.create_release.outputs.version }}-Linux.tar.gz
      #     asset_name: OtterLib-${{ needs.create_release.outputs.version }}-Windows.tar.gz
      #     asset_content_type: application/gzip
      # - name: upload RType artifact
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ needs.create_release.outputs.upload_url }}
      #     asset_path: $GITHUB_WORKSPACE/games/rtype/build/RType-${{ needs.create_release.outputs.version }}-Linux.tar.gz
      #     asset_name: RType-${{ needs.create_release.outputs.version }}-Windows.tar.gz
      #     asset_content_type: application/gzip

