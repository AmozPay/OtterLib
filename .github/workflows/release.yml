name: release

on:
  push:
    tags:
      - v*
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release_step.outputs.upload_url }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get version from tag
        id: version
        run: |
          echo version=${GITHUB_REF#refs/tags/v} >> $GITHUB_OUTPUT
        shell: bash
      - name: Parse Changelog Entry
        id: changelog
        uses: coditory/changelog-parser@v1
        with:
          version: ${{ steps.version.outputs.version }}
      - name: Create GitHub Release
        id: create_release_step
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.changelog.outputs.version }}
          release_name: v${{ steps.changelog.outputs.version }}
          body: ${{ steps.changelog.outputs.description }}
  create_bundles_linux:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build and pack OtterLib
        run: |
          cd $GITHUB_WORKSPACE/OtterLib
          mkdir build && cd build
          PROJECT_VERSION=${{ needs.create_release.outputs.version }} cmake ..
          cpack --config CPackConfig.cmake
      - name: build and pack rtype
        run: |
          cd $GITHUB_WORKSPACE/games/rtype
          mkdir build && cd build
          PROJECT_VERSION=${{ needs.create_release.outputs.version }} cmake ..
          cpack --config CPackConfig.cmake
          ls
      - name: upload OtterLib artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: OtterLib/build/OtterLib-${{ needs.create_release.outputs.version }}-Linux.tar.gz
          asset_name: OtterLib-${{ needs.create_release.outputs.version }}-Linux.tar.gz
          asset_content_type: application/gzip
      - name: upload RType artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: games/rtype/build/RType-${{ needs.create_release.outputs.version }}-Linux-release.tar.gz
          asset_name: RType-${{ needs.create_release.outputs.version }}-Linux.tar.gz
          asset_content_type: application/gzip
  create_bundles_windows:
    runs-on: windows-latest
    needs: create_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build and pack OtterLib
        env:
          PROJECT_VERSION: ${{ needs.create_release.outputs.version }}
        run: |
          cd OtterLib
          ls
          mkdir build && cd build
          cmake ..
          cmake --build . --config Release
          cpack --config CPackConfig.cmake
          ls
          cd ../..
      - name: build and pack rtype
        env:
          PROJECT_VERSION: ${{ needs.create_release.outputs.version }}
        run: |
          cd games\rtype
          mkdir build && cd build
          cmake ..
          cmake --build . --config Release
          cpack --config CPackConfig.cmake
          ls
          cd ../..
      - name: upload OtterLib artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: OtterLib/build/OtterLib-${{ needs.create_release.outputs.version }}-win64.zip
          asset_name: OtterLib-${{ needs.create_release.outputs.version }}-Windows-64bits.zip
          asset_content_type: application/zip
      - name: upload RType artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: games/rtype/build/RType-${{ needs.create_release.outputs.version }}-win64-release.zip
          asset_name: RType-${{ needs.create_release.outputs.version }}-Windows-64bits.zip
          asset_content_type: application/zip
      - name: upload RType installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: games/rtype/build/RType-${{ needs.create_release.outputs.version }}-win64.exe
          asset_name: RType-${{ needs.create_release.outputs.version }}-Windows64Installer.exe
          asset_content_type: application/vnd.microsoft.portable-executable
  deploy_docs:
    name: deploy docs on github pages
    if: github.repository == 'AmozPay/OtterLib'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: install doxygen
        run: |
          sudo apt install -y doxygen graphviz
      - name: build documentation
        run: |
          cd $GITHUB_WORKSPACE/docs
          ./generate_docs.prod.sh
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'docs/.retype'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
